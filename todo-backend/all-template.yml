apiVersion:  template.openshift.io/v1
kind: Template
metadata:
  name: db-be-fe
objects:	
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: fe
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: image-registry.openshift-image-registry.svc:5000/common/todo-frontend:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: tododb
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: ${DATABASE_IMAGE}
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: be
      app.kubernetes.io/component: be
      app.kubernetes.io/instance: be
    name: be
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  stringData:
    password: ${PASSWORD}
    user: todoapp
  kind: Secret
  metadata:
    name: mysql-env
- apiVersion: v1
  data:
    init: "true"
    name: todo
    svc: tododb
  kind: ConfigMap
  metadata:
    name: back-env
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: be
      app.kubernetes.io/component: be
      app.kubernetes.io/instance: be
    name: be
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: be:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: ${BACK_END_CTXDIR}
      git: 
        ref: ${BACK_END_BRANCH}
        uri: ${BACK_END_REPO}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:12
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
      - github:
          secret: ODOJIG5gyR1PGaV3CX9U
        type: GitHub
      - generic:
          secret: L1NN8W_T6EExWOjOs2eG
        type: Generic
      - type: ConfigChange
        type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: be
      app.kubernetes.io/component: be
      app.kubernetes.io/instance: be
    name: be
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: be
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deploymentconfig: be
      spec:
        containers:
          - env:
              - name: DATABASE_USER
                valueFrom:
                  secretKeyRef:
                    key: user
                    name: mysql-env
              - name: DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: mysql-env
              - name: DATABASE_INIT
                valueFrom:
                  configMapKeyRef:
                    key: init
                    name: back-env
              - name: DATABASE_NAME
                valueFrom:
                  configMapKeyRef:
                    key: name
                    name: back-env
              - name: DATABASE_SVC
                valueFrom:
                  configMapKeyRef:
                    key: svc
                    name: back-env
            imagePullPolicy: Always
            name: be
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - be
          from:
            kind: ImageStreamTag
            name: be:latest
        type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: tododb
      app.kubernetes.io/component: tododb
      app.kubernetes.io/instance: tododb
      app.kubernetes.io/name: mysql
    name: tododb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: tododb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deploymentconfig: tododb
      spec:
        containers:
          - env:
              - name: MYSQL_DATABASE
                value: todo
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: mysql-env
              - name: MYSQL_USER
                valueFrom:
                  secretKeyRef:
                    key: user
                    name: mysql-env
            imagePullPolicy: IfNotPresent
            name: tododb
            ports:
              - containerPort: 3306
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - tododb
          from:
            kind: ImageStreamTag
            name: tododb:latest
        type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: fe
      app.kubernetes.io/component: fe
      app.kubernetes.io/instance: fe
      app.kubernetes.io/name: todo-frontend
    name: fe
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: fe
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deploymentconfig: fe
      spec:
        containers:
          - imagePullPolicy: Always
            name: fe
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - fe
          from:
            kind: ImageStreamTag
            name: todo-frontend:latest
            namespace: common
        type: ImageChange
parameters:
- name: DATABASE_IMAGE
  description: "image to use for tododb"
  required: true
  value: registry.access.redhat.com/rhscl/mysql-57-rhel7 
- name: BACK_END_REPO
  description: "url to backend sources"
  required: true
  value: https://github.com/mazmarz/DO288-apps-v1
- name: BACK_END_CTXDIR
  description: "context dir for url to backend sources"
  required: true
  value: todo-backend
- name: BACK_END_BRANCH
  description: "branck for url to backend sources"
  required: true
  value: todo-backend
- name: PASSWORD
  description: "db password"
  required: true
  value: mypass
- name: SECRET
  description: "secret for webhooks"
  generate: expression
  from: "[0-9]{8}"
